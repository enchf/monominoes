Monominoes.bs={},Monominoes.bs.GRID=Monominoes.renders.DIV.extend({name:"BOOTSTRAP_GRID",defaultcss:"container",grid:null,cell:null,gridcss:null,buildGridSystem:function(){var s=["lg","md","sm","xs"],i="",e=this.grid,l=1;return s.forEach(function(s){var t=Math.abs(parseInt(e[s]));isNaN(t)||(t%=12,0==t&&(t=12),i=Komunalne.util.append(i,Monominoes.util.format("col-{0}-{1}",s,12/t)),t>l&&(l=t))}),this.cols=l,""!=i?i:"col-lg-1"},buildLayout:function(){this.gridcss=this.gridcss||{},this.grid=this.grid||{lg:1},this.cell=this.cell||{},this.cell.def=this.cell.def||{},this.cell.def["class"]=this.buildGridSystem(),this.cell.extracss=this.gridcss.cols||"",this.cell.iterable=!0,this.cell.key="col",this.config.children=[{render:Monominoes.renders.DIV,config:{key:"row",def:{"class":"row"},extracss:this.gridcss.rows||"",iterable:!0,children:[{render:Monominoes.renders.DIV,config:this.cell}]}}],this["super"].buildLayout()},extractData:function(s){var i,e;for(s=this["super"].extractData(s),s=Komunalne.util.isArray?s:[s],i=[],e=0;e<s.length;)i.push(s.slice(e,e+this.cols)),e+=this.cols;return i}});